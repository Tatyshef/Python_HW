Git

В чём суть заливать домашки на git hub? Прикрепляем к резюме ссылки.
Создаём репозиторий на git  hub, копируем https репозитория. Идём в git bash.
Создаём на компе папку, куда будем клонировать репозиторий.
Заходим в папку. В терминале пишем
git clone <ссылка>
Enter
Происходит копирование репозитория. Папка там .git хранит историю коммитов в репозитории.

start . - команда перебрасывает в проводник

vim Terminal.txt - создали файл и вставили инфо туда.
git status - покажет, что файлы не отслеживаются на локальном репозитории. Надо добавить под git
git add <file_name>
или
git add . то есть все файлы неотслеженные добавит под git
Этой командой мы говорим git смотри на всё. Далее сделай фотографию на память.

git commit -m ‘история_изменения’  . В кавычках лучше всегда писать на английском, чтобы не было проблем.


То есть всё запомни.
git push - отправили на git hub файл

Если git hub ругается, когда пытаетесь отправить файл. То дадим ему понять, кто мы с помощью команд

git config --global user.name ‘название_репозитория’
git config --global user.email ‘почта_к которой привязан git hub’

Проверим, прописались ли данные
git config --global user.name
git config --global user.email


Также можно в одной команде и добавить под git и сфотографировать
git -am ‘add file.txt’

Можно под каждую домашку создавать отдельный репозиторий, его клонируем и у себя локально засунули туда файлик домашки. Затем git -am ‘info’
git push
Потом ссылку скопировали и в резюме. Для красоты, чтобы было слово ссылка, а под капотом адрес лежал.

Пока всё. Далее бранчи.

Создать токен
Идём в профиль на git hub - settings - developer settings - personal access token
Далее generate new token, даём название, no expiration выбираем. Везде галочки проставляем.  Подтверждаем токен в конце.
Скопировали токен, сохранили в текстовом редакторе. Запомнили.
То есть если терминал будет просить ввести name, то вводите имя, как в git hub, а вместо пароля вводим токен. Один раз ввести и всё.

