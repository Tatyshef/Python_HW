  Terminal Linux

Полезный ресурс по изучению терминала
https://ru.hexlet.io/courses/cli-basics

Команды

pwd - выводит, где в файловой системе мы находимся
ls -  список файлов, находящихся в папке, где находимся
ls -l   выведет файлы, в более структурированном виде, каждый с новой строки, кроме невидимых
ls -la выведет все файлы, даже скрытые

cd name_folder зайти внутрь указанной папки

cd .. выйти на уровень выше
cd ../..  выйти на два уровня выше
cd  -    вошли снова в ту, где были шаг назад

mkdir group_27 - создаём папку
mkdir nn_1 nn_2 nn_3  - создаём несколько папок сразу
cd group_27 - зашли внутрь указанной папки

можно использовать tab  чтобы не писать полностью имя, первые буквы, затем tab

touch - создаёт файлы (1 из 15 способов)

touch j_file.json  - создаём файл с указанным именем
vim j_file.json - открываем файл текстовым редактором
 
Чтобы начать работать в vim жмём I (insert), написали что-нибудь, затем  esc 
:wq (write, quit), enter

cat j_file.json - открываем файл с его содержимым
cp j_file.json f_1/j_file.json  (копируем файл j_file.json,  далее указан путь куда его и как положить, т.е имя файла)

mv f_1/item_1.json f_2/ff_1/item_1.json (перемещаем файл из папки f_1 в папку ff_1 и называем файл, как он будет лежать в папке)

rm item_1.json   - удаляем файл item_1.json

rm -rf  удаляем папку с внутренним содержанием, т.е с файлами (рекурсивно файлики удаляем)



ls -R -выведется папка(папки) и их содержимое (рекурсивный просмотр)
ls -R -la - выведется такое структурированное дерево из папок и файлов


cat - выводит содержимое файла, писать можно и сливать файлы  с помощью этой команды
cat > tt_2.txt (создаём файл и можно писать содержимое туда прямо в терминале. Затем Ctrl +C

cat tt_1.txt tt_2.txt  - выводится два файла указанных в терминал
cat -b tt_2.txt - будет нумерация выводиться на каждой строке, пустые строки  в счёт не идут

cat - n tt_2.txt - пронумеруются все строки, включая пустые

history - история наших действий history > his.txt (сохраним файл)

cat >> tt_2.txt - редактируем файл, добавляя инфо в конец файла

cat tt_2.txt | less - откроется файл в отдельном фрейме. Выйти из него буква q

cat tt_1.txt >> tt_2.txt  - добавляем содержимое файла tt_1.txt в файл tt_2.txt

cat tt_1.txt > tt_2.txt - перезаписываем содержимое файла tt_2.txt, будет такой же как и tt_1.txt
cat ttn_2 | sort - отсортировали выдачу указанного файла
cat ttn_1.txt ttn_2.txt > ttn_4.txt - содержимое двух файлов записываем в файл ttn_4.txt

find . -name ooo* - найдётся файл, c содержанием на ooo ( можно и без точки, * значит всё остальное)
find -iname Ooo* - найдёт файлы и с большой буквы и с маленькой, если есть

grep ooo * - команда grep ищет в текущей директории, там, где есть ooo

grep -r ooo * group_27_1 -  т.е рекурсивно, пройдётся по всем файлам и найдёт комбинацию из ooo

head his.txt -  выведет первые 10 строк из указанного файла
head -n3 his.txt - выведет первые 3 строки из файла

tail his.txt - выведет 10 последних строк из файла
tail -n3 his.txt - выведет 3 последние строки из файла

tail -f ttn_3.txt - выведутся изменения в реальном времени, то есть при добавлении в файл, будет выводиться и в терминале.





